1 - Funcion Supabase para generar la transaccion de stock

create or replace function actualizarArticulosConTransYDiferencia (articulosArray JSONB) returns JSONB as $$
DECLARE
    articuloRecord RECORD;
    articuloId UUID;
    cantidad_Parametro INT;
    cantidad_Actual INT;
    resultado JSONB;
    resta INT;
BEGIN
        
    BEGIN
    
        -- Utilizamos un conjunto de registros para iterar sobre el arreglo JSONB
        FOR articuloRecord IN SELECT * FROM jsonb_array_elements(articulosArray)
        LOOP

            -- Extrae el id y la cantidad del objeto
            articuloId := (articuloRecord.value->>'id')::UUID;
            cantidad_Parametro := (articuloRecord.value->>'quantity')::INT;


            -- Buscar Articulo
            SELECT "cantidad" INTO cantidad_Actual FROM "Articulos" WHERE "id" = articuloId;

            -- Calcula la resta entre la cantidad actual y la cantidad parametro
            resta := cantidad_Actual - cantidad_Parametro;

            -- Actualiza la tabla Articulos
            UPDATE "Articulos"
            SET "cantidad" = resta  -- Califica la columna
            WHERE "id" = articuloId;  -- Califica la columna

            IF found THEN
                -- La actualización se realizó con éxito
                -- Aquí puedes realizar alguna acción adicional si es necesario
            ELSE
                -- La actualización no se realizó con éxito
                -- Puedes manejar esta situación de acuerdo a tus necesidades
                RAISE EXCEPTION 'Al menos una actualización falló';
            END IF;

        END LOOP;
        
        resultado = jsonb_build_object('mensaje', 'Actualizaciones exitosas');
        RETURN resultado;
    EXCEPTION
        WHEN others THEN
            resultado = jsonb_build_object('error del try', SQLERRM);
            RETURN resultado;
    END;
    
END;
$$ language plpgsql;
